##teamcity[testSuiteStarted name='tst_VerifyExceptionThrown' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='initTestCase()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='initTestCase()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testCorrectStdTypes()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testCorrectStdTypes()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testCorrectStdExceptions()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testCorrectStdExceptions()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testCorrectMyExceptions()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testCorrectMyExceptions()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testFailInt()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFailed name='testFailInt()' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/verifyexceptionthrown/tst_verifyexceptionthrown.cpp(0)|]' details='Expected exception of type double to be thrown but unknown exception caught' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testFailInt()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testFailStdString()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFailed name='testFailStdString()' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/verifyexceptionthrown/tst_verifyexceptionthrown.cpp(0)|]' details='Expected exception of type char* to be thrown but unknown exception caught' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testFailStdString()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testFailStdRuntimeError()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFailed name='testFailStdRuntimeError()' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/verifyexceptionthrown/tst_verifyexceptionthrown.cpp(0)|]' details='Expected exception of type std::runtime_error to be thrown but std::exception caught with message: logic error' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testFailStdRuntimeError()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testFailMyException()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFailed name='testFailMyException()' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/verifyexceptionthrown/tst_verifyexceptionthrown.cpp(0)|]' details='Expected exception of type MyBaseException to be thrown but std::exception caught with message: logic error' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testFailMyException()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testFailMyDerivedException()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFailed name='testFailMyDerivedException()' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/verifyexceptionthrown/tst_verifyexceptionthrown.cpp(0)|]' details='Expected exception of type std::runtime_error to be thrown but std::exception caught with message: MyDerivedException' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testFailMyDerivedException()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='testFailNoException()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFailed name='testFailNoException()' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/verifyexceptionthrown/tst_verifyexceptionthrown.cpp(0)|]' details='Expected exception of type std::exception to be thrown but no exception caught' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='testFailNoException()' flowId='tst_VerifyExceptionThrown']
##teamcity[testStarted name='cleanupTestCase()' flowId='tst_VerifyExceptionThrown']
##teamcity[testFinished name='cleanupTestCase()' flowId='tst_VerifyExceptionThrown']
##teamcity[testSuiteFinished name='tst_VerifyExceptionThrown' flowId='tst_VerifyExceptionThrown']

##teamcity[testSuiteStarted name='tst_Counting' flowId='tst_Counting']
##teamcity[testStarted name='initTestCase()' flowId='tst_Counting']
##teamcity[testFinished name='initTestCase()' flowId='tst_Counting']
##teamcity[testStarted name='testPassPass(row 1)' flowId='tst_Counting']
##teamcity[testFinished name='testPassPass(row 1)' flowId='tst_Counting']
##teamcity[testStarted name='testPassPass(row 2)' flowId='tst_Counting']
##teamcity[testFinished name='testPassPass(row 2)' flowId='tst_Counting']
##teamcity[testStarted name='testPassSkip(row 1)' flowId='tst_Counting']
##teamcity[testFinished name='testPassSkip(row 1)' flowId='tst_Counting']
##teamcity[testIgnored name='testPassSkip(row 2)' message='Skipping |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testStarted name='testPassFail(row 1)' flowId='tst_Counting']
##teamcity[testFinished name='testPassFail(row 1)' flowId='tst_Counting']
##teamcity[testStarted name='testPassFail(row 2)' flowId='tst_Counting']
##teamcity[testFailed name='testPassFail(row 2)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='|'false|' returned FALSE. ()' flowId='tst_Counting']
##teamcity[testFinished name='testPassFail(row 2)' flowId='tst_Counting']
##teamcity[testIgnored name='testSkipPass(row 1)' message='Skipping |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testStarted name='testSkipPass(row 2)' flowId='tst_Counting']
##teamcity[testFinished name='testSkipPass(row 2)' flowId='tst_Counting']
##teamcity[testIgnored name='testSkipSkip(row 1)' message='Skipping |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testIgnored name='testSkipSkip(row 2)' message='Skipping |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testIgnored name='testSkipFail(row 1)' message='Skipping |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testStarted name='testSkipFail(row 2)' flowId='tst_Counting']
##teamcity[testFailed name='testSkipFail(row 2)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='|'false|' returned FALSE. ()' flowId='tst_Counting']
##teamcity[testFinished name='testSkipFail(row 2)' flowId='tst_Counting']
##teamcity[testStarted name='testFailPass(row 1)' flowId='tst_Counting']
##teamcity[testFailed name='testFailPass(row 1)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='|'false|' returned FALSE. ()' flowId='tst_Counting']
##teamcity[testFinished name='testFailPass(row 1)' flowId='tst_Counting']
##teamcity[testStarted name='testFailPass(row 2)' flowId='tst_Counting']
##teamcity[testFinished name='testFailPass(row 2)' flowId='tst_Counting']
##teamcity[testStarted name='testFailSkip(row 1)' flowId='tst_Counting']
##teamcity[testFailed name='testFailSkip(row 1)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='|'false|' returned FALSE. ()' flowId='tst_Counting']
##teamcity[testFinished name='testFailSkip(row 1)' flowId='tst_Counting']
##teamcity[testIgnored name='testFailSkip(row 2)' message='Skipping |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testStarted name='testFailFail(row 1)' flowId='tst_Counting']
##teamcity[testFailed name='testFailFail(row 1)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='|'false|' returned FALSE. ()' flowId='tst_Counting']
##teamcity[testFinished name='testFailFail(row 1)' flowId='tst_Counting']
##teamcity[testStarted name='testFailFail(row 2)' flowId='tst_Counting']
##teamcity[testFailed name='testFailFail(row 2)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='|'false|' returned FALSE. ()' flowId='tst_Counting']
##teamcity[testFinished name='testFailFail(row 2)' flowId='tst_Counting']
##teamcity[testStarted name='testFailInInit(before)' flowId='tst_Counting']
##teamcity[testFinished name='testFailInInit(before)' flowId='tst_Counting']
##teamcity[testStarted name='testFailInInit(fail)' flowId='tst_Counting']
##teamcity[testFailed name='testFailInInit(fail)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='Fail in init()' flowId='tst_Counting']
##teamcity[testFinished name='testFailInInit(fail)' flowId='tst_Counting']
##teamcity[testStarted name='testFailInInit(after)' flowId='tst_Counting']
##teamcity[testFinished name='testFailInInit(after)' flowId='tst_Counting']
##teamcity[testStarted name='testFailInCleanup(before)' flowId='tst_Counting']
##teamcity[testFinished name='testFailInCleanup(before)' flowId='tst_Counting']
##teamcity[testStarted name='testFailInCleanup(fail)' flowId='tst_Counting']
##teamcity[testFailed name='testFailInCleanup(fail)' message='Failure! |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' details='Fail in cleanup()' flowId='tst_Counting']
##teamcity[testStdOut name='testFailInCleanup(fail)' out='QDEBUG: This test function should execute and then QFAIL in cleanup()' flowId='tst_Counting']
##teamcity[testFinished name='testFailInCleanup(fail)' flowId='tst_Counting']
##teamcity[testStarted name='testFailInCleanup(after)' flowId='tst_Counting']
##teamcity[testFinished name='testFailInCleanup(after)' flowId='tst_Counting']
##teamcity[testStarted name='testSkipInInit(before)' flowId='tst_Counting']
##teamcity[testFinished name='testSkipInInit(before)' flowId='tst_Counting']
##teamcity[testIgnored name='testSkipInInit(skip)' message='Skip in init() |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testStarted name='testSkipInInit(after)' flowId='tst_Counting']
##teamcity[testFinished name='testSkipInInit(after)' flowId='tst_Counting']
##teamcity[testStarted name='testSkipInCleanup(before)' flowId='tst_Counting']
##teamcity[testFinished name='testSkipInCleanup(before)' flowId='tst_Counting']
##teamcity[testIgnored name='testSkipInCleanup(skip)' message='Skip in cleanup() |[Loc: qtbase/tests/auto/testlib/selftests/counting/tst_counting.cpp(0)|]' flowId='tst_Counting']
##teamcity[testStarted name='testSkipInCleanup(after)' flowId='tst_Counting']
##teamcity[testStdOut name='testSkipInCleanup(after)' out='QDEBUG: This test function should execute and then QSKIP in cleanup()' flowId='tst_Counting']
##teamcity[testFinished name='testSkipInCleanup(after)' flowId='tst_Counting']
##teamcity[testStarted name='cleanupTestCase()' flowId='tst_Counting']
##teamcity[testFinished name='cleanupTestCase()' flowId='tst_Counting']
##teamcity[testSuiteFinished name='tst_Counting' flowId='tst_Counting']

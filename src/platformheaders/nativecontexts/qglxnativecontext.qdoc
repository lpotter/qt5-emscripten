/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
  \class QGLXNativeContext
  \inmodule QtPlatformHeaders
  \since 5.4

  \brief A class encapsulating a GLXContext and related native handles.

  \note Only context() is guaranteed to be valid. The other handles may be all \c 0. They are
  useful however when QOpenGLContext::setNativeHandle() is used to adopt a legacy context
  created by glXCreateContext. To adopt such a context, either the Window or VisualID
  that had been used to create the context needs to be known, otherwise the adoption will
  fail. For modern contexts created with an FBConfig, these are not necessary, the
  GLXContext itself is sufficient. The Display is optional.

  \note There is no binary compatibility guarantee for this class, meaning
  that an application using it is only guaranteed to work with the Qt version it was
  developed against.

  \sa QOpenGLContext::setNativeHandle(), QOpenGLContext::nativeHandle()
 */

/*!
  \fn GLXContext QGLXNativeContext::context() const

  \return the GLXContext.
 */

/*!
  \fn Display *QGLXNativeContext::display() const

  \return a pointer to the X11 display or \c NULL if not available.
 */

/*!
  \fn Window QGLXNativeContext::window() const

  \return the X11 Window or \c 0 if not available.
 */

/*!
  \fn VisualID QGLXNativeContext::visualId() const

  \return the X11 visual ID or \c 0 if not available.
 */

/*!
  \fn QGLXNativeContext::QGLXNativeContext()

  Construct a new instance with no handles.
 */

/*!
  \fn QGLXNativeContext::QGLXNativeContext(GLXContext ctx, Display *dpy, Window wnd, VisualID vid)

  Constructs a new instance with the provided \a ctx, \a dpy, \a wnd, \a vid handles.
 */
